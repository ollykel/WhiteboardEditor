# Test web_socket_server service
on:
  push:
    paths:
      - 'WebSocketServer/**'
      - 'docker-compose.yml'
      - '.github/workflows/test_web_socket_server.yml'
  pull_request:
    on:
      - opened
jobs:
  run_cargo_tests_web_socket_server:
    # Build web_socket_server_builder and run cargo tests within
    # web_socket_server_builder
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
      - name: Set up Docker
        uses: docker/setup-docker-action@v4
        with:
          daemon-config: |
            {
              "debug": true,
              "features": {
                "containerd-snapshotter": true
              }
            }
      - name: Set up Docker cache
        id: cache-setup
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}/docker
          key: ${{ runner.os }}-web-socket-server-${{ hashFiles('docker-compose.yml', 'WebSocketServer/Dockerfile', 'WebSocketServer/Cargo.toml', 'WebSocketServer/Cargo.lock', '.github/workflows/test_web_socket_server.yml') }}
          restore-keys: |
            ${{ runner.os }}-web-socket-server-
      - name: Build with cache
        id: build-cached
        if: steps.cache-setup.outputs.cache-hit == 'true'
        env:
          DOCKER_CACHE: ${{ runner.temp }}/docker
        run: |
          docker compose build web_socket_server_builder
      - name: Build without cache
        id: build-no-cache
        if: steps.cache-setup.outputs.cache-hit != 'true'
        env:
          DOCKER_CACHE: ${{ runner.temp }}/docker
        run: |
          docker compose build --no-cache web_socket_server_builder
      - name: Run Cargo tests
        id: run-cargo-tests
        run: |
          docker compose run --entrypoint 'cargo test' web_socket_server_builder
