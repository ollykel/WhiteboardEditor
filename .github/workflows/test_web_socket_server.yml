# Test web_socket_server service
on:
  push:
    paths:
      - 'WebSocketServer/**'
      - 'docker-compose.yml'
      - '.github/workflows/test_web_socket_server.yml'
  pull_request:
    on:
      - opened
jobs:
  build_and_push_web_socket_server:
    # Build web_socket_server_builder and push to container registry
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
      - name: Set up Docker
        uses: docker/setup-docker-action@v4
        with:
          daemon-config: |
            {
              "debug": true,
              "features": {
                "containerd-snapshotter": true
              }
            }
      - name: Cache build dependencies
        id: cache-cargo
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.docker
          key: ${{ runner.os }}-cargo-${{ hashFiles('WebSocketServer/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Build with cache
        id: build-cached
        if: steps.cache-cargo.outputs.cache-hit == 'true'
        env:
          WHITEBOARD_EDITOR_CR_URI: ghcr.io/${{ github.repository_owner }}
          WHITEBOARD_EDITOR_TAG: latest
          DOCKER_CACHE: ${{ github.workspace }}/.docker
        run: |
          echo "Building with cache at directory \"${DOCKER_CACHE}\""

          docker compose build web_socket_server_builder
      - name: Build without cache
        id: build-no-cache
        if: steps.cache-cargo.outputs.cache-hit != 'true'
        env:
          WHITEBOARD_EDITOR_CR_URI: ghcr.io/${{ github.repository_owner }}
          WHITEBOARD_EDITOR_TAG: latest
          DOCKER_CACHE: ${{ github.workspace }}/.docker
        run: |
          echo "Building new cache at directory \"${DOCKER_CACHE}\""

          docker compose build --no-cache web_socket_server_builder
      - name: push
        env:
          CR_USER: ${{ github.actor }}
          CR_PASS: ${{ secrets.GITHUB_TOKEN }}
          WHITEBOARD_EDITOR_CR_URI: ghcr.io/${{ github.repository_owner }}
          WHITEBOARD_EDITOR_TAG: latest
        run: |
          # Log into container registry
          printenv CR_PASS | docker login ghcr.io -u "${CR_USER}" --password-stdin
          docker compose push web_socket_server_builder

  run_tests_web_socket_server:
    # Pulls web_socket_server_builder image from container registry and runs
    # unit tests.
    runs-on: ubuntu-24.04
    needs: build_and_push_web_socket_server
    container:
      image: ghcr.io/${{ github.repository_owner }}/web_socket_server_builder:latest
    defaults:
      run:
        working-directory: /app
    steps:
      - name: Run Cargo Tests
        run: cargo test
