# Test rest_api service
on:
  push:
    paths:
      - 'RestAPI/**'
      - 'docker-compose.yml'
      - '.github/workflows/test_rest_api.yml'
jobs:
  test_build_rest_api:
    # make sure image builds
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
      - name: build
        run: |
          docker compose build rest_api

          echo 'service "rest_api" built successfully'
  test_create_user:
    # test creating a new user
    runs-on: ubuntu-24.04
    steps:
        # install dependencies
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install curl
        # check out repo
      - uses: actions/checkout@v5
        # set up test database
      - name: Start test database
        shell: bash
        run: |
          cd RestAPI/test/database

          docker compose -p ${{ github.job }} up --build -d
      - name: Set up test env
        env:
          TEST_ENV: |
            # Secret for signing JSON Web Tokens (JWTs)
            # Should be at least 64 characters in length
            WHITEBOARD_EDITOR_JWT_SECRET=2KUU6DNUY6XGBL2NQFXDXGGVOJ63A75RYSZ5SKD3PMYPCXC6L3I3WRDZER5JA4GC2SOQ2K6W66JUQ3XMM3QT6PXC4UKAFXDDDIIRP4A=

            # URI to access Mongo database
            # Format: mongodb+srv://<USER>:<PASSWORD>@<URL>/<DATABASE>
            WHITEBOARD_EDITOR_MONGO_URI=mongo://127.0.0.1:27017/testdb

            # Number of seconds before a jwt expires
            WHITEBOARD_EDITOR_JWT_EXPIRATION_SECS=999999999

            # To set exposed port for testing
            WHITEBOARD_EDITOR_REST_API_PORT=3001
        run: |
          printenv TEST_ENV > .env
      - name: docker compose up
        run: docker compose -p ${{ github.job }} up --build -d rest_api
      - name: Print rest api initial logs
        run: |
          sleep 3

          docker compose -p ${{ github.job }} logs rest_api
      - name: Wait for RestAPI to be ready
        env:
          NUM_RETRIES: 20
        run: |
          for attempt in $(seq ${NUM_RETRIES})
          do
            echo "Attempt ${attempt} to connect to rest api ..."

            if docker compose -p ${{ github.job }} exec rest_api curl -i "http://localhost:3000/api/v1/health"
            then
              echo "Successfully connected to rest api server"
              exit 0
            fi

            sleep 1
          done

          echo "Failed to connnect to rest api server after ${NUM_RETRIES} retries"
          exit 1
      - name: Print RestAPI logs
        run: docker compose logs rest_api
      - name: Create user
        env:
          CREATE_USER_DATA: |
            {
              "username": "tester_alpha",
              "email": "tester_alpha@example.com",
              "password": "password123"
            }
        run: |
          docker compose -p ${{ github.job }} exec rest_api curl -i -H 'Content-Type: application/json' -d"${CREATE_USER_DATA}" -o result.txt 'http://localhost:3000/api/v1/users'
          # TODO: actually validate the result
      - name: Display results
        run: |
          echo "Result of API call:"

          cat results.txt
      - name: Teat down test database
        if: always()
        shell: bash
        run: |
          cd RestAPI/test/database

          docker compose -p ${{ github.job }} down -v
      - name: Tear down docker compose
        if: always()
        run: docker compose -p ${{ github.job }} down
