# Test frontend service
on:
  push:
    paths:
      - 'Frontend/**'
      - 'docker-compose.yml'
      - '.github/workflows/test_frontend.yml'
  pull_request:
    on:
      - opened
jobs:
  test_lint_frontend:
    # run linter
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        id: checkout-repo
        uses: actions/checkout@v5
      - name: Install dependencies
        id: install-dependencies
        run: |
          # install dependencies via yarn
          cd Frontend

          yarn install

          echo 'service "frontend" installed dependencies successfully'
      - name: Run lint
        id: lint
        run: |
          cd Frontend

          yarn run lint

          echo 'service "frontend" linted successfully'

  test_build_frontend:
    # make sure image builds
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v5
      - name: Set up Docker
        uses: docker/setup-docker-action@v4
        with:
          daemon-config: |
            {
              "debug": true,
              "features": {
                "containerd-snapshotter": true
              }
            }
      - name: Set up Docker cache
        id: cache-setup
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}/docker
          key: ${{ runner.os }}-frontend-${{ hashFiles('docker-compose.yml', 'Frontend/Dockerfile', 'Frontend/package.json', 'Frontend/package-lock.json', '.github/workflows/test_frontend.yml') }}
          restore-keys: |
            ${{ runner.os }}-frontend-
      - name: Build without cache
        id: build-no-cache
        if: steps.cache-setup.outputs.cache-hit != 'true'
        env:
          DOCKER_CACHE: ${{ runner.temp }}/docker
        run: |
          docker compose build --no-cache frontend

          echo 'service "frontend" built successfully'
      - name: Build with cache
        id: build-cached
        if: steps.cache-setup.outputs.cache-hit == 'true'
        env:
          DOCKER_CACHE: ${{ runner.temp }}/docker
        run: |
          docker compose build frontend

          echo 'service "frontend" built successfully'
